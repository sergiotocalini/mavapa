# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  branches:
    include:
      - refs/tags/*
      - develop
  paths:
    include:
      - /mavapa
      - /requirements.txt

pool:
  name: 'Azure Pipelines'
  vmimage: 'ubuntu-latest'
      
variables:
  project.id: 'mavapa'
  artifact.docker.conn: '23a0ddbc-cb18-4dda-a06f-0bedcaa8e010'
  artifact.docker.repo: 'sergiotocalini/mavapa'
  artifact.helm.repo: ''
  artifact.helm.name: 'mavapa'
  artifact.helm.work: '$(Build.SourcesDirectory)/.devops/helm'
  artifact.helm.dest: '$(Build.ArtifactStagingDirectory)/helm'
  
steps:
  - task: GitVersion@5
    displayName: 'GitVersion'
    inputs:
      configFilePath: GitVersion.yml

  - task: Docker@2
    displayName: 'docker: Build'
    inputs:
      containerRegistry: '$(artifact.docker.conn)'
      repository: '$(artifact.docker.repo)'
      command: build
      Dockerfile: .devops/docker/Dockerfile
      buildContext: '$(Build.SourcesDirectory)'
      tags: '$(Build.BuildNumber)'
      arguments: '--build-arg "version=$(Build.BuildNumber)"'

  - task: Docker@2
    displayName: 'docker: Push'
    inputs:
      containerRegistry: '$(artifact.docker.conn)'
      repository: '$(artifact.docker.repo)'
      command: push
      tags: '$(Build.BuildNumber)'
    condition: |
      and
      (
        succeeded(),
        or
        (
          not(in(variables['Build.Reason'], 'PullRequest')),
          eq(variables['artifact.docker.publish'], true)
        )
      )

  - task: AzureCLI@1
    displayName: "Helm: Package and Push"
    inputs:
      azureSubscription: '$(artifact.helm.sign)'
      scriptLocation: inlineScript
      inlineScript: |
        az acr helm repo add -n $(artifact.helm.repo)
        helm package $(artifact.helm.work) --app-version $(Build.BuildNumber) --version $(Build.BuildNumber) --destination $(artifact.helm.dest)
        az acr helm push $(artifact.helm.dest)/$(artifact.helm.name)-$(Build.BuildNumber).tgz -n $(artifact.helm.repo) --force
    condition: |
      and
      (
        succeeded(),
        or
        (
          not(in(variables['Build.Reason'], 'PullRequest')),
          eq(variables['artifact.helm.publish'], true)
        )
      )
    enabled: false


