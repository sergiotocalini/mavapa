# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python
parameters:
  - name: artifact_helm_push
    displayName: "Push Helm Chart"
    type: boolean
    default: true
  - name: artifact_docker_push
    displayName: "Push Docker Container"
    type: boolean
    default: true

trigger:
  branches:
    include:
      - refs/tags/*
      - develop
  paths:
    include:
      - /mavapa
      - /requirements.txt

pool:
  name: 'Azure Pipelines'
  vmimage: 'ubuntu-18.04'
      
variables:
  project.id: 'mavapa'
  artifact.docker.conn: '23a0ddbc-cb18-4dda-a06f-0bedcaa8e010'
  artifact.docker.repo: 'sergiotocalini/mavapa'
  artifact.helm.repo: 'https://github.com/sergiotocalini/helm-charts'
  artifact.helm.name: 'mavapa'
  artifact.helm.work: '$(Build.SourcesDirectory)/.devops/helm'
  artifact.helm.dest: '$(Build.ArtifactStagingDirectory)/helm'

resources:
  repositories:
  - repository: helm-repo
    type: github
    endpoint: sergiotocalini@github.com
    name: sergiotocalini/helm-charts
    ref: main
  
steps:
  - checkout: self
  
  - task: GitVersion@5
    displayName: 'GitVersion'
    inputs:
      configFilePath: GitVersion.yml

  - task: Docker@2
    displayName: 'docker: Build'
    inputs:
      containerRegistry: '$(artifact.docker.conn)'
      repository: '$(artifact.docker.repo)'
      command: build
      Dockerfile: .devops/docker/Dockerfile
      buildContext: '$(Build.SourcesDirectory)'
      tags: '$(Build.BuildNumber)'
      arguments: '--build-arg "version=$(Build.BuildNumber)"'

  - ${{ if eq(parameters.artifact_docker_push, true) }}:
      - task: Docker@2
        displayName: 'docker: Push'
        inputs:
          containerRegistry: '$(artifact.docker.conn)'
          repository: '$(artifact.docker.repo)'
          command: push
          tags: '$(Build.BuildNumber)'
          condition: |
            and
            (
            succeeded(),
            or
            (
            not(in(variables['Build.Reason'], 'PullRequest')),
            )
            )

  - checkout: helm-repo
    
  - ${{ if eq(parameters.artifact_helm_push, true) }}:
      - task: Bash@3
        displayName: "Helm: Build & Push"
        inputs:
          stargetType: 'inline'
          script: |
            DIFFS="$(git diff HEAD HEAD~ --name-only)"
            if [[ "${DIFFS[@]}" =~ ".devops/helm" ]]; then
            helm package $(artifact.helm.work) --app-version $(Build.BuildNumber) --version $(Build.BuildNumber) --destination $(artifact.helm.dest)   
            az acr helm push $(artifact.helm.dest)/$(artifact.helm.name)-$(Build.BuildNumber).tgz -n $(artifact.helm.repo) --force
            fi
            ls -l "$(Build.SourcesDirectory)"
            condition: |
              and
              (
              succeeded(),
              or
              (
              not(in(variables['Build.Reason'], 'PullRequest'))
              )
              )


