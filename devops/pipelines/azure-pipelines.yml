# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master
- develop

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python27:
      python.version: '2.7'
    Python37:
      python.version: '3.7'

#variables:
#  buildConfiguration: 'Release'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- task: GitVersion@4
  displayName: 'GitVersion'
  inputs:
    updateAssemblyInfo: true
    preferBundledVersion: false

- script: echo %Action%%BuildVersion%
  displayName: 'Set build version'
  env:
    Action: '##vso[build.updatebuildnumber]'
    BuildVersion: $(GitVersion.SemVer)

- script: |
    sudo apt update
    sudo apt install build-essential libsasl2-dev ldap-utils libldap2-dev libmysqlclient-dev python-pip python-virtualenv
    virtualenv -p python$(python.version) "~/.venvs/mavapa"
    . "~/.venvs/mavapa/bin/activate"
    pip install --upgrade pip
    pip install pyflakes pylint nose nosexcover
    pip install -r requirements.txt
  displayName: 'Initialize dependencies'

# - script: |
#    pip install pytest pytest-azurepipelines
#    pytest
#  displayName: 'pytest'


